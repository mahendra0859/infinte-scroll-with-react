{"version":3,"sources":["App.js","useBookSearch.js","index.js"],"names":["App","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","b","title","length","console","log","catch","e","isCancel","useBookSearch","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","className","type","value","onChange","target","book","index","ref","key","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"uOAGe,SAASA,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEQF,mBAAS,GAFjB,mBAErBG,EAFqB,KAETC,EAFS,OCAf,SAAuBH,EAAOE,GAAa,IAAD,EACzBH,oBAAS,GADgB,mBAChDK,EADgD,KACvCC,EADuC,OAE7BN,oBAAS,GAFoB,mBAEhDO,EAFgD,KAEzCC,EAFyC,OAG7BR,mBAAS,IAHoB,mBAGhDS,EAHgD,KAGzCC,EAHyC,OAIzBV,oBAAS,GAJgB,mBAIhDW,EAJgD,KAIvCC,EAJuC,KAkCvD,OA7BAC,qBAAU,WACRH,EAAS,MACR,CAACT,IACJY,qBAAU,WAGR,IAAIC,EAqBJ,OAvBAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACJC,OAAQ,MACRC,IAAK,sCACLC,OAAQ,CAAEC,EAAGlB,EAAOmB,KAAMjB,GAC1BkB,YAAa,IAAIN,IAAMO,aAAY,SAACC,GAAD,OAAQT,EAASS,OAEnDC,MAAK,SAACC,GACLf,GAAS,SAACgB,GACR,OAAO,YACF,IAAIC,IAAJ,sBAAYD,GAAZ,YAA0BD,EAAIG,KAAKC,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAEC,gBAG5DpB,EAAWa,EAAIG,KAAKC,KAAKI,OAAS,GAClC3B,GAAW,GACX4B,QAAQC,IAAIV,EAAIG,SAEjBQ,OAAM,SAACC,GACFtB,IAAMuB,SAASD,IACnB7B,GAAS,MAEN,kBAAMM,OACZ,CAACb,EAAOE,IACJ,CAAEE,UAASE,QAAOE,QAAOE,WD/BW4B,CAActC,EAAOE,GAAxDE,EAHoB,EAGpBA,QAASE,EAHW,EAGXA,MAAOE,EAHI,EAGJA,MAAOE,EAHH,EAGGA,QACzB6B,EAAWC,mBACXC,EAAqBC,uBACzB,SAACC,GACKvC,IACAmC,EAASK,SACXL,EAASK,QAAQC,aAEnBN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,gBAAkBtC,IAC/BuB,QAAQC,IAAI,WACZ/B,GAAc,SAAC8C,GAAD,OAAoBA,EAAiB,SAGnDN,GACFJ,EAASK,QAAQM,QAAQP,GAE3BV,QAAQC,IAAI,OAAQS,MAEtB,CAACvC,EAASM,IAQZ,OACE,yBAAKyC,UAAU,OACb,2BAAOC,KAAK,OAAOC,MAAOrD,EAAOsD,SAPrC,SAAsBlB,GACpBnC,EAASmC,EAAEmB,OAAOF,OAClBlD,EAAc,MAMXK,EAAMqB,KAAI,SAAC2B,EAAMC,GAChB,OAAIjD,EAAMwB,SAAWyB,EAAQ,EAEzB,yBAAKC,IAAKjB,EAAoBkB,IAAKH,GAChCA,GAIE,yBAAKG,IAAKH,GAAOA,MAG5B,6BAAMpD,GAAW,cACjB,6BAAME,GAAS,UE3CrB,IAAMsD,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACnE,EAAD,OAEF8D,K","file":"static/js/main.c072a054.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const { loading, error, books, hasMore } = useBookSearch(query, pageNumber);\n  const observer = useRef();\n  const lastBookElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          console.log('Visible');\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\n        }\n      });\n      if (node) {\n        observer.current.observe(node);\n      }\n      console.log('node', node);\n    },\n    [loading, hasMore]\n  );\n\n  function handleSearch(e) {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  }\n\n  return (\n    <div className='App'>\n      <input type='text' value={query} onChange={handleSearch} />\n      {books.map((book, index) => {\n        if (books.length === index + 1) {\n          return (\n            <div ref={lastBookElementRef} key={book}>\n              {book}\n            </div>\n          );\n        } else {\n          return <div key={book}>{book}</div>;\n        }\n      })}\n      <div>{loading && 'Loading...'}</div>\n      <div>{error && 'Error'}</div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function useBookSearch(query, pageNumber) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setBooks([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: 'https://openlibrary.org/search.json',\n      params: { q: query, page: pageNumber },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    })\n      .then((res) => {\n        setBooks((prevBooks) => {\n          return [\n            ...new Set([...prevBooks, ...res.data.docs.map((b) => b.title)]),\n          ];\n        });\n        setHasMore(res.data.docs.length > 0);\n        setLoading(false);\n        console.log(res.data);\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        setError(true);\n      });\n    return () => cancel();\n  }, [query, pageNumber]);\n  return { loading, error, books, hasMore };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}